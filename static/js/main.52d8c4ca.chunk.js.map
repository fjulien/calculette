{"version":3,"sources":["actions/index.js","containers/Affichage.jsx","containers/BoutonsList.jsx","containers/History.jsx","App.js","serviceWorker.js","reducers/calcule.js","reducers/index.js","index.js"],"names":["getNumber","number","type","valeur","signe","result","clear","connect","state","affiche","calcule","dispatch","bindActionCreators","_ref","react_default","a","createElement","className","reactstrap_es","row","sm","value","affichage","onClick","color","nombre","xs","History","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","collapse","setState","style","marginBottom","isOpen","history","map","element","index","key","Component","App","src_containers_Affichage","src_containers_BoutonsList","src_containers_History","Boolean","window","location","hostname","match","initialState","number1","calculer","arguments","length","undefined","action","objectSpread","concat","parseFloat","toConsumableArray","allReducers","combineReducers","store","createStore","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.52d8c4ca.chunk.js","sourcesContent":["export const getNumber = (number) => ({\n    type: 'GETNUMBER',\n    number\n});\n\nexport const valeur = (signe) => ({\n    type: 'VALEUR',\n    signe\n})\n\nexport const result = () => ({\n    type: 'RESULT',\n})\nexport const clear = () => ({\n    type: 'CLEAR',\n\n})","import React from 'react';\nimport './Affichage.css'\nimport { Col, Form, FormGroup, Input, Button } from 'reactstrap';\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { clear } from \"../actions\";\n\nconst Affichage = ({ affiche, clear }) => {\n    return (\n        <div className='Affichage'>\n            <Form>\n                <FormGroup row>\n                    <Col sm={6}>\n                        <Input className='input' type=\"text\" value={affiche.affichage} />\n                    </Col>\n                    <Col sm={3}>\n                        <Input className='input' type=\"text\" value={affiche.signe} />\n                    </Col>\n                    <Col sm={3}>\n                        <Button onClick={() => clear()} className='clear' color='dark'>Clear</Button>\n                    </Col>\n                </FormGroup>\n            </Form>\n        </div>\n    );\n}\n\nfunction mstp(state) {\n    return {\n        affiche: state.calcule\n    }\n}\n\nfunction mdtp(dispatch) {\n    return bindActionCreators({ clear }, dispatch);\n}\n\nexport default connect(mstp, mdtp)(Affichage);","import React from 'react';\nimport './BoutonsList.css'\nimport { Row, Col, Button } from 'reactstrap';\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { getNumber, valeur, result } from \"../actions\";\n\nconst BoutonsList = ({ getNumber, valeur, result }) => {\n    return (\n        <div className='BoutonsList'>\n            <Row className='ligne'>\n                <Col xs=\"3\"><Button onClick={() => getNumber(7)} color=\"dark\" className='boutons'>7</Button></Col>\n                <Col xs=\"3\"><Button onClick={() => getNumber(8)} color=\"dark\" className='boutons'>8</Button></Col>\n                <Col xs=\"3\"><Button onClick={() => getNumber(9)} color=\"dark\" className='boutons'>9</Button></Col>\n                <Col xs=\"3\"><Button onClick={() => valeur('/')} color=\"dark\" className='boutons'>/</Button></Col>\n            </Row>\n            <Row className='ligne'>\n                <Col xs=\"3\"><Button onClick={() => getNumber(4)} color=\"dark\" className='boutons'>4</Button></Col>\n                <Col xs=\"3\"><Button onClick={() => getNumber(5)} color=\"dark\" className='boutons'>5</Button></Col>\n                <Col xs=\"3\"><Button onClick={() => getNumber(6)} color=\"dark\" className='boutons'>6</Button></Col>\n                <Col xs=\"3\"><Button onClick={() => valeur('*')} color=\"dark\" className='boutons'>x</Button></Col>\n            </Row>\n            <Row className='ligne'>\n                <Col xs=\"3\"><Button onClick={() => getNumber(1)} color=\"dark\" className='boutons'>1</Button></Col>\n                <Col xs=\"3\"><Button onClick={() => getNumber(2)} color=\"dark\" className='boutons'>2</Button></Col>\n                <Col xs=\"3\"><Button onClick={() => getNumber(3)} color=\"dark\" className='boutons'>3</Button></Col>\n                <Col xs=\"3\"><Button onClick={() => valeur('-')} color=\"dark\" className='boutons'>-</Button></Col>\n            </Row>\n            <Row className='ligne'>\n                <Col xs=\"3\"><Button onClick={() => getNumber(0)} color=\"dark\" className='boutons'>0</Button></Col>\n                <Col xs=\"3\"><Button onClick={() => getNumber(\".\")} color=\"dark\" className='boutons'>.</Button></Col>\n                <Col xs=\"3\"><Button onClick={() => result()} color=\"dark\" className='boutons'>=</Button></Col>\n                <Col xs=\"3\"><Button onClick={() => valeur('+')} color=\"dark\" className='boutons'>+</Button></Col>\n            </Row>\n        </div>\n    );\n}\n\nfunction mstp(state) {\n    return {\n        nombre: state.nombre\n    }\n}\n\nfunction mdtp(dispatch) {\n    return bindActionCreators({ getNumber, valeur, result }, dispatch);\n}\nexport default connect(mstp, mdtp)(BoutonsList);","import React, { Component } from 'react';\nimport './History.css';\nimport { connect } from \"react-redux\";\nimport { Collapse, Button, CardBody, Card } from 'reactstrap';\n\nclass History extends Component {\n    constructor(props) {\n        super(props);\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            collapse: false\n        };\n    }\n\n    toggle() {\n        this.setState({ collapse: !this.state.collapse });\n    }\n\n    render() {\n        return (\n            <div className='History'>\n                <Button color=\"primary\" onClick={this.toggle} style={{ marginBottom: '1rem' }}>History</Button>\n                <Collapse isOpen={this.state.collapse}>\n                    <Card className='zoom'>\n                        <CardBody>\n                            <ol>\n                                {this.props.affiche.history.map((element, index) =>\n                                    <li key={index}>{element}</li>)}\n                            </ol>\n                        </CardBody>\n                    </Card>\n                </Collapse>\n\n            </div>\n        );\n    }\n}\n\nfunction mstp(state) {\n    return {\n        affiche: state.calcule\n    }\n}\n\nexport default connect(mstp)(History);\n\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Container } from 'reactstrap';\nimport Affichage from './containers/Affichage';\nimport BoutonsList from './containers/BoutonsList';\nimport History from './containers/History';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Container>\n          <Affichage />\n          <BoutonsList />\n          <History />\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","let initialState = {\n    affichage: \"\",\n    number1: 0,\n    signe: \"\",\n    history: [],\n};\n\nconst calculer = (state = initialState, action) => {\n    let nextState;\n    switch (action.type) {\n        case 'GETNUMBER':\n            nextState = { ...state, affichage: `${state.affichage}${action.number}` }\n            return nextState;\n\n        case 'VALEUR':\n            if (state.affichage === \"\" && action.signe === '-') {\n                nextState = { ...state, affichage: action.signe }\n            } else if (state.affichage === \"\") {\n                nextState = { ...state }\n            } else {\n                nextState = {\n                    ...state,\n                    number1: state.affichage,\n                    affichage: \"\",\n                    signe: action.signe,\n                }\n            }\n            return nextState;\n        case 'RESULT':\n            let result = 0;\n            switch (state.signe) {\n                case \"+\":\n                    result = parseFloat(state.number1) + parseFloat(state.affichage)\n                    break;\n                case \"-\":\n                    result = state.number1 - state.affichage\n                    break;\n                case \"/\":\n                    result = state.number1 / state.affichage\n                    break;\n                case \"*\":\n                    result = state.number1 * state.affichage\n                    break;\n                default:\n                    break;\n            }\n            if (state.affichage !== \"\" && state.number1) {\n                nextState = {\n                    ...state,\n                    affichage: result,\n                    history: [...state.history, (`${state.number1} ${state.signe} ${state.affichage} = ${result}`)],\n                    number1: 0,\n                    signe: \"=\",\n                }\n            } else { nextState = state }\n            return nextState;\n        case 'CLEAR':\n            nextState = {\n                ...state,\n                affichage: \"\",\n                number1: 0,\n                signe: \"\",\n            }\n            return nextState;\n        default:\n            return state;\n    }\n}\nexport default calculer;","import { combineReducers } from \"redux\";\n\nimport calculer from \"./calcule\";\n\nconst allReducers = combineReducers({\n\n    calcule: calculer,\n})\n\nexport default allReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport allReducers from \"./reducers\";\n\nconst store = createStore(allReducers)\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}